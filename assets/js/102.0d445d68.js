(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{698:function(v,_,t){"use strict";t.r(_);var a=t(26),s=Object(a.a)({},(function(){var v=this,_=v.$createElement,t=v._self._c||_;return t("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[t("h1",{attrs:{id:"《前端工程化》-读书笔记"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#《前端工程化》-读书笔记"}},[v._v("#")]),v._v(" 《前端工程化》 读书笔记")]),v._v(" "),t("blockquote",[t("p",[v._v("此书将前端工程化解读为一系列规范和流程的集合，目标是解决前端开发及前后端协作过程中的痛难点，涵盖项目的起始、开发、测试及部署环节。")])]),v._v(" "),t("blockquote",[t("p",[v._v("前端需求和逻辑的不断加重是催生前端工程化的环境因素，"),t("strong",[v._v("前端相关技术、规范和工具的发展")]),v._v("是其得以实施的必要前提。")])]),v._v(" "),t("blockquote",[t("p",[v._v("工程化方案的核心目标之一就似乎在保证质量的前提下，尽可能提高产品的开发速度，减少低级的逻辑错误，提供稳定的部署。")])]),v._v(" "),t("blockquote",[t("p",[v._v("前端工程化是整体 wbe 工作流中间的一个子集方案，是持续集成方案中的一环。")])]),v._v(" "),t("h3",{attrs:{id:"前端的技能栈"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端的技能栈"}},[v._v("#")]),v._v(" 前端的技能栈")]),v._v(" "),t("p",[t("strong",[v._v("硬技能")])]),v._v(" "),t("p",[v._v("对于 js/html/css ，掌握其语法和特性是最基本的，但这些只是应用能力，最终考量的仍是计算机体系的理论知识。"),t("strong",[v._v("数据结构、算法、软件工程等基础知识仍决定着一个前端工程师的上限。")])]),v._v(" "),t("p",[t("strong",[v._v("软技能")])]),v._v(" "),t("p",[v._v("良好的用户体验，包括内容的快速展现、操作的流畅度、减少设备的耗电量等，即提高产品的"),t("strong",[v._v("性能")]),v._v("。")]),v._v(" "),t("p",[t("strong",[v._v("扩展知识")]),v._v("\nweb 服务器端知识，了解 web 应用从前到后的工作流程和整体架构模型，有助于编写更合理的客户端逻辑，及定位问题。了解"),t("strong",[v._v("网络协议")]),v._v("等。")]),v._v(" "),t("h2",{attrs:{id:"工程化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#工程化"}},[v._v("#")]),v._v(" 工程化")]),v._v(" "),t("h3",{attrs:{id:"初始-脚手架"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#初始-脚手架"}},[v._v("#")]),v._v(" 初始：脚手架")]),v._v(" "),t("p",[v._v("脚手架：功能是创建项目初始文件，本质是方案的封装，其执行环境局限于本地。")]),v._v(" "),t("p",[v._v("对于业务开发人员，前端工程方案和工具就是个黑盒，他们不需要了解其中复杂原理，只需要知道"),t("strong",[v._v("如何配置、如何使用")]),v._v("即可。")]),v._v(" "),t("p",[v._v("合理的前端工程体系是平缓的学习曲线，不应当强制要求业务开发人员学习各种细节。")]),v._v(" "),t("h3",{attrs:{id:"第一步-构建"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第一步-构建"}},[v._v("#")]),v._v(" 第一步：构建")]),v._v(" "),t("p",[v._v("推荐工具：webpack。构建的核心是资源的管理。")]),v._v(" "),t("ul",[t("li",[v._v("ES规范的实现")]),v._v(" "),t("li",[v._v("CSS 的弱编程能力")]),v._v(" "),t("li",[v._v("资源定位问题")]),v._v(" "),t("li",[v._v("资源压缩问题")]),v._v(" "),t("li",[v._v("模块依赖的分析与压缩打包")]),v._v(" "),t("li",[v._v("hash 指纹：应对浏览器缓存策略")])]),v._v(" "),t("h3",{attrs:{id:"第二步-本地开发服务器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第二步-本地开发服务器"}},[v._v("#")]),v._v(" 第二步：本地开发服务器")]),v._v(" "),t("ul",[t("li",[v._v("mock 服务：提供异步数据，模拟跨域场景")]),v._v(" "),t("li",[v._v("动态构建，浏览器自动刷新")])]),v._v(" "),t("h3",{attrs:{id:"第三步-静态资源和动态资源的分离部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#第三步-静态资源和动态资源的分离部署"}},[v._v("#")]),v._v(" 第三步：静态资源和动态资源的分离部署")]),v._v(" "),t("p",[v._v("spa 单页面应用")]),v._v(" "),t("ul",[t("li",[v._v("可离线使用")]),v._v(" "),t("li",[v._v("后端只提供数据接口")]),v._v(" "),t("li",[v._v("前后端分别部署、维护")])]),v._v(" "),t("h2",{attrs:{id:"模块化"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#模块化"}},[v._v("#")]),v._v(" 模块化")]),v._v(" "),t("p",[v._v("模块化属于架构层面的概念，工程化与模块化的关系类似车间与零件，"),t("strong",[v._v("工程化中构建体系的功能之一就是支持模块化规范并将散列的模块构建为利于部署的整合文件")]),v._v("。")]),v._v(" "),t("ul",[t("li",[v._v("避免命名冲突")]),v._v(" "),t("li",[v._v("依赖管理")]),v._v(" "),t("li",[v._v("性能优化")]),v._v(" "),t("li",[v._v("提高复用性")]),v._v(" "),t("li",[v._v("提高可维护性")])]),v._v(" "),t("h3",{attrs:{id:"前端模块化方案"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前端模块化方案"}},[v._v("#")]),v._v(" 前端模块化方案")]),v._v(" "),t("p",[t("strong",[v._v("commonjs")])]),v._v(" "),t("p",[t("strong",[v._v("ES6 Module")]),v._v("\n语言层面的规范。")])])}),[],!1,null,null,null);_.default=s.exports}}]);