(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{494:function(t,_,v){t.exports=v.p+"assets/img/handshake.32e77650.png"},495:function(t,_,v){t.exports=v.p+"assets/img/wave.38e0633a.png"},725:function(t,_,v){"use strict";v.r(_);var r=v(26),e=Object(r.a)({},(function(){var t=this,_=t.$createElement,r=t._self._c||_;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"传输层协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#传输层协议"}},[t._v("#")]),t._v(" 传输层协议")]),t._v(" "),r("h2",{attrs:{id:"tcp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#tcp-协议"}},[t._v("#")]),t._v(" TCP 协议")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://blog.csdn.net/qzcsu/article/details/72861891",target:"_blank",rel:"noopener noreferrer"}},[t._v("两张动图-彻底明白TCP的三次握手与四次挥手"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://www.bilibili.com/video/BV1bi4y1x7m5?from=search&seid=14824946240476707551",target:"_blank",rel:"noopener noreferrer"}},[t._v("【深度讲解+面试回答】tcp/ip协议三次握手、四次挥手，通俗易懂，亲自解答 —— B站"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("TCP 是传输层的协议，提供面向连接的服务，在传输数据前必须先建立连接，数据传输后要释放连接，是一种"),r("strong",[t._v("可靠")]),t._v("的传输服务。")]),t._v(" "),r("p",[t._v("在 TCP 中，"),r("strong",[t._v("连接")]),t._v("作为最基本的对象，每条连接都有两个端点（套接字），端点定义为"),r("code",[t._v("IP 地址 + 端口号")]),t._v("。")]),t._v(" "),r("h3",{attrs:{id:"三次握手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#三次握手"}},[t._v("#")]),t._v(" 三次握手")]),t._v(" "),r("p",[r("img",{attrs:{src:v(494),alt:"三次握手"}})]),t._v(" "),r("p",[r("strong",[t._v("细节理解")])]),t._v(" "),r("ol",[r("li",[t._v("客户端发送 tcp 请求\n"),r("ul",[r("li",[r("code",[t._v("SYN 位")]),t._v(" 置 1（表示请求建立连接）")]),t._v(" "),r("li",[t._v("随机生成 "),r("code",[t._v("seq")]),t._v(" = x")])])]),t._v(" "),r("li",[t._v("服务端响应 tcp 请求\n"),r("ul",[r("li",[r("code",[t._v("SYN 位")]),t._v(" 仍为 1")]),t._v(" "),r("li",[t._v("随机生成 "),r("code",[t._v("seq")]),t._v(" = y")]),t._v(" "),r("li",[r("code",[t._v("ACK 位")]),t._v("置为 1")]),t._v(" "),r("li",[r("code",[t._v("ack")]),t._v(" = x + 1")])])]),t._v(" "),r("li",[t._v("客户端响应服务端的请求\n"),r("ul",[r("li",[r("code",[t._v("ACK 位")]),t._v("置为1")]),t._v(" "),r("li",[r("code",[t._v("seq")]),t._v(" = x + 1")]),t._v(" "),r("li",[r("code",[t._v("ack")]),t._v(" = y + 1")])])]),t._v(" "),r("li",[r("strong",[t._v("最终实现全双工通信，即同一时间信息可以双向传输")])])]),t._v(" "),r("h3",{attrs:{id:"四次挥手"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手"}},[t._v("#")]),t._v(" 四次挥手")]),t._v(" "),r("p",[r("img",{attrs:{src:v(495),alt:"四次挥手"}})]),t._v(" "),r("p",[r("strong",[t._v("技术细节")])]),t._v(" "),r("ol",[r("li",[t._v("客户端发送报文\n"),r("ul",[r("li",[t._v("FIN 位 置1 ，表示请求断开连接，seq = x")])])]),t._v(" "),r("li",[t._v("服务端确认消息\n"),r("ul",[r("li",[t._v("ACK 位 置1，ack = x + 1")])])]),t._v(" "),r("li",[t._v("服务端发送结束报文\n"),r("ul",[r("li",[t._v("FIN 位置 1 ，seq = y")])])]),t._v(" "),r("li",[t._v("客户端确认消息\n"),r("ul",[r("li",[t._v("ACK 位置1， ack = y + 1")])])])]),t._v(" "),r("h3",{attrs:{id:"拥塞控制"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#拥塞控制"}},[t._v("#")]),t._v(" 拥塞控制")]),t._v(" "),r("p",[t._v("控制全局网络的拥塞情况，"),r("strong",[t._v("通过控制发送方每次发送的流量多少，逐渐试探整体网络的拥塞程度")]),t._v("。")]),t._v(" "),r("h2",{attrs:{id:"udp-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#udp-协议"}},[t._v("#")]),t._v(" UDP 协议")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.cnblogs.com/fundebug/p/differences-of-tcp-and-udp.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("一文搞懂 TCP 与UDP 的区别"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("UDP （User Datagram Protocol，用户数据报协议）也是传输层的协议，是一种无连接的协议。当报文发送后，无法确认其是否安全到达。")]),t._v(" "),r("ul",[r("li",[t._v("UDP 不会对数据报文进行任何拆分与拼接操作\n"),r("ul",[r("li",[t._v("只会增加一个UDP头标识，就传递到网络层")]),t._v(" "),r("li",[t._v("接收端只需去除报文头就传递给应用层，不会进行任何拼接操作。")])])]),t._v(" "),r("li",[t._v("具有一对多、多对一的方式。")]),t._v(" "),r("li",[t._v("没有拥塞控制\n"),r("ul",[r("li",[t._v("可能导致丢包")]),t._v(" "),r("li",[t._v("适合某些实时性要求高的场景（如电话会议）等")])])])]),t._v(" "),r("p",[r("strong",[t._v("与TCP 的特点对比")])]),t._v(" "),r("table",[r("thead",[r("tr",[r("th",[t._v("特点")]),t._v(" "),r("th",[t._v("UDP")]),t._v(" "),r("th",[t._v("TCP")])])]),t._v(" "),r("tbody",[r("tr",[r("td",[t._v("是否连接")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是")])]),t._v(" "),r("tr",[r("td",[t._v("可靠性")]),t._v(" "),r("td",[t._v("否")]),t._v(" "),r("td",[t._v("是")])]),t._v(" "),r("tr",[r("td",[t._v("传输方式")]),t._v(" "),r("td",[t._v("面向报文")]),t._v(" "),r("td",[t._v("面向字节流")])]),t._v(" "),r("tr",[r("td",[t._v("首部开销")]),t._v(" "),r("td",[t._v("8字节")]),t._v(" "),r("td",[t._v("20-60字节")])]),t._v(" "),r("tr",[r("td",[t._v("传输速度")]),t._v(" "),r("td",[t._v("快")]),t._v(" "),r("td",[t._v("慢")])]),t._v(" "),r("tr",[r("td",[t._v("连接个数")]),t._v(" "),r("td",[t._v("1对1，1对多，多对1")]),t._v(" "),r("td",[t._v("1对1")])]),t._v(" "),r("tr",[r("td",[t._v("适用场景")]),t._v(" "),r("td",[t._v("实时应用（电话会议、直播等）")]),t._v(" "),r("td",[t._v("需要可靠传输的应用（文件传输等）")])])])]),t._v(" "),r("h2",{attrs:{id:"quic-协议"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#quic-协议"}},[t._v("#")]),t._v(" QUIC 协议")]),t._v(" "),r("blockquote",[r("p",[r("a",{attrs:{href:"https://www.jianshu.com/p/bb3eeb36b479",target:"_blank",rel:"noopener noreferrer"}},[t._v("QUIC协议浅析与HTTP/3.0"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://mp.weixin.qq.com/s/kHRoWGKqM066FWYVFzvAvw",target:"_blank",rel:"noopener noreferrer"}},[t._v("小三上位，udp逆袭！为啥HTTP/3选择了它？"),r("OutboundLink")],1)]),t._v(" "),r("p",[r("a",{attrs:{href:"https://blog.csdn.net/wolfGuiDao/article/details/108729560",target:"_blank",rel:"noopener noreferrer"}},[t._v("HTTP3.0和QUIC协议那些事"),r("OutboundLink")],1)])]),t._v(" "),r("p",[t._v("QUIC（Quick UDP Internet Connections) 是谷歌基于 UDP 传输层协议改造的，提供像 TCP 一样的可靠性。")]),t._v(" "),r("ul",[r("li",[t._v("对"),r("strong",[t._v("队头阻塞")]),t._v("(HOL)问题的解决更为彻底")]),t._v(" "),r("li",[t._v("切换网络时的连接保持")])]),t._v(" "),r("h3",{attrs:{id:"quic-对-队头阻塞问题的处理"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#quic-对-队头阻塞问题的处理"}},[t._v("#")]),t._v(" QUIC 对 队头阻塞问题的处理")]),t._v(" "),r("p",[t._v("QUIC 的多路复用和 HTTP2 类似。在一条 QUIC 连接上可以并发发送多个 HTTP 请求 (stream)。但是 QUIC 的多路复用相比 HTTP2 有一个很大的优势："),r("strong",[t._v("QUIC 一个连接上的多个 stream 之间没有依赖")]),t._v("。")]),t._v(" "),r("p",[t._v("假如 stream2 丢了一个 udp packet，也只会影响 stream2 的处理。不会影响 stream2 之前及之后的 stream 的处理。")])])}),[],!1,null,null,null);_.default=e.exports}}]);